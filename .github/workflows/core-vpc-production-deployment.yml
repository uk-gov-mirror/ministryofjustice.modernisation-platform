---
name: core-shared-services-deployment

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  paths-ignore:
      - '**.preproduction.json'
      - '**.test.json'
      - '**.development.json'
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_IN_AUTOMATION: true

defaults:
  run:
    shell: bash

jobs:
  core-shared-services-deployment-plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: 0.14.4
          terraform_wrapper: false
 
      - name: Run core-vpc terraform plan
        run: |
          git_dir=`git rev-parse --show-toplevel`
          environment="production"

          # Test if this is a PR or PULL event
          if [ ! -z ${{ github.event.pull_request.number }} ]
          then
          #CONFIGURE TERRAFORM AND WORKSPACE
          bash scripts/terraform-init.sh terraform/environments/core-vpc
          terraform -chdir="terraform/environments/core-shared-services" workspace select ${environment}

          #RUN TERRATEST
          pushd terraform/environments/core-vpc/test
          # Install GOLANG 15.8
          if [ `whoami` != "runner" ]
          then
          wget -q https://dl.google.com/go/go1.15.8.linux-amd64.tar.gz
          tar -zxvf go1.15.8.linux-amd64.tar.gz
          sudo mv go /usr/local
          echo "--  running newly installed go  --"
          TEST=`/usr/local/go/bin/go test go_test.go ${environment} | ${git_dir}/scripts/redact-output.sh | tee /dev/stderr | tail -n 1`
          else
          echo "--  running native go  --"
          TEST=`go test go_test.go ${environment} | ${git_dir}/scripts/redact-output.sh | tee /dev/stderr | tail -n 1`
          fi
          popd
          TEST="TERRATEST RESULT\n${TEST}"
          ENCODED=`echo ${TEST} | base64`
          bash scripts/update-pr-comments.sh ${ENCODED}

          #RUN TERRAFORM PLAN
          PLAN=`bash scripts/terraform-plan.sh terraform/environments/core-shared-services | tee /dev/stderr | grep '^Plan: \|^No changes.'`
          PLAN="TERRAFORM PLAN RESULT\n${PLAN}"
          ENCODED=`echo ${PLAN} | base64`
          bash scripts/update-pr-comments.sh ${ENCODED}
          fi
        env:
          SECRET: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ secrets.GITHUB_REPOSITORY }}
          PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}

  core-shared-services-deployment-apply:
    runs-on: ubuntu-latest
    if: github.event.ref == 'refs/heads/main'
    needs: [core-shared-services-deployment-plan]
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: 0.14.4
          terraform_wrapper: false

      - name: Run Terraform apply in terraform/environments/core-shared-services
        run: |
          bash scripts/terraform-init.sh terraform/environments/core-shared-services
          terraform -chdir="terraform/environments/core-shared-services" workspace select core-shared-services-production
          bash scripts/terraform-apply.sh terraform/environments/core-shared-services